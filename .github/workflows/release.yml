name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: varyag-x86_64-linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: varyag-x86_64-windows.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: varyag-x86_64-macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        working-directory: ./crates/varyag

      - name: Prepare artifact
        run: |
          cd target/${{ matrix.target }}/release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ../../../${{ matrix.artifact_name }}.zip varyag.exe
          else
            tar -czvf ../../../${{ matrix.artifact_name }}.tar.gz varyag
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ./${{ matrix.artifact_name }}.*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
